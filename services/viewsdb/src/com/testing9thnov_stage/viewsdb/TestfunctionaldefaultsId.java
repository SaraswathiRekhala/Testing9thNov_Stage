/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing9thnov_stage.viewsdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Time;
import java.util.Objects;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

public class TestfunctionaldefaultsId implements Serializable {

    private Integer id;
    @Type(type = "DateTime")
    private LocalDateTime timestampcol;
    private Time timecol;
    private Date datecol;
    private Time localtimecol;
    @Type(type = "DateTime")
    private LocalDateTime localtimestampcol;

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public LocalDateTime getTimestampcol() {
        return this.timestampcol;
    }

    public void setTimestampcol(LocalDateTime timestampcol) {
        this.timestampcol = timestampcol;
    }

    public Time getTimecol() {
        return this.timecol;
    }

    public void setTimecol(Time timecol) {
        this.timecol = timecol;
    }

    public Date getDatecol() {
        return this.datecol;
    }

    public void setDatecol(Date datecol) {
        this.datecol = datecol;
    }

    public Time getLocaltimecol() {
        return this.localtimecol;
    }

    public void setLocaltimecol(Time localtimecol) {
        this.localtimecol = localtimecol;
    }

    public LocalDateTime getLocaltimestampcol() {
        return this.localtimestampcol;
    }

    public void setLocaltimestampcol(LocalDateTime localtimestampcol) {
        this.localtimestampcol = localtimestampcol;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Testfunctionaldefaults)) return false;
        final Testfunctionaldefaults testfunctionaldefaults = (Testfunctionaldefaults) o;
        return Objects.equals(getId(), testfunctionaldefaults.getId()) &&
                Objects.equals(getTimestampcol(), testfunctionaldefaults.getTimestampcol()) &&
                Objects.equals(getTimecol(), testfunctionaldefaults.getTimecol()) &&
                Objects.equals(getDatecol(), testfunctionaldefaults.getDatecol()) &&
                Objects.equals(getLocaltimecol(), testfunctionaldefaults.getLocaltimecol()) &&
                Objects.equals(getLocaltimestampcol(), testfunctionaldefaults.getLocaltimestampcol());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(),
                getTimestampcol(),
                getTimecol(),
                getDatecol(),
                getLocaltimecol(),
                getLocaltimestampcol());
    }
}
